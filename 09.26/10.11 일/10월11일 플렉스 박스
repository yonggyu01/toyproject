position
움직이는 방법
위치 속성과 함께 사용
전부다 position사용시 태그 작성 순서대로 배치 (position이 없는태그는 같은층, position사용한 태그는 위층)



위치속성 relative
top / right / bottom  /left 
(해당속성은 적용시 해당 방향에서 내가 움직일 태그의 거리를 뜻함
 rigth : 0px 이면 우측에 딱 붙어서 표시됨)
* 방향 속성은 position 속성이 없는 경우 이동불가
값이 static인 경우 제외


right. bottom은 position값이 absolute, fixed, sticky인 경우 사용 가능
기준의 속성명 위치에서 대상의 속성명 위치까지의 거리


* static
1. 기본값
2. 지정된 요소를 일반 요소 (p , h 등) 처럼 사용
3. 위치, 레이어 변경 불가
4. 태그가 작성된 순서대로 배치
5. margin : auto 사용 가능. (정렬)


absolute
1. 위치 독립적, 다른요소의 영향을 받지 않음
2. 동일한 기준안에서는 (형제 요소들끼리) 모든 요소가 동일한 기준점 사용
3. margin : auto 사용불가**********************
4. 위치 레이어 이동 가능
5. absolute가 적용된 태그는 다른 태그가 인지할수가 없어짐


relative
1.요소가 작성된 순서대로 배치
2. 위치 레이어 변경가능
3. 모든요소가 독립된 중심점 사용
4. margin : auto 사용가능
5. 다른요소의 영향 있음 (형제요소들이 서로 인식) -> 서로의 순서? 같은걸 안다는 소리임 a1 a2 a3이 있을때 
 a1에  top을 많이 줘서 스크린상 엄청 밑으로 내려가 보여도 a2와 a3는 a1의 top이 없을때 배치되어있던 상태에서 변동이 없음
 


**레이어
1.요소들간의 층(앞/뒤)
2. z-index 속성사용
3. 1부터 시작하는 정수사용
4. 순서와 무관하며 높은 숫자가 앞
5. 속성을 지정하지 않는 경우 나중에 작성된 요소가 앞
6. 임의로 생성된 값은 실제 값보다 무조건 뒤
7. position 속성과 함께 사용
8. z-index값이 없는 레이어는 있는값보다 밑
9. 부모자식 관계에서는 자식이 위에 위치함
**z-index 비교는 반드시 형제여야함 (다른 부모자식 관계에서 비교불가)  형제끼리만 비교해야함   형제의 자녀끼리 비교하려면 부모 관계에 z index값을 올리면 됨
** 형제끼리 겹쳐서 자식요소가 보이지 않는 경우 형제요소의 z index를 높여서 자식요소가 위로 보이게 하는게 맞음
   자식요소에 z index를 수정해서 올리는경우 심각한 오류
\

** 기준점
1. 움직이는 대상의 position이 relative인 경우
  -부모요소가 기준

  2. 움직이는 대상의 position이 absolute인 경우
    -position속성을 가지는 가장 가까운 상위요소가 기준
    - 상위요소 중 position 속성을 가지는 요소가 없는 경우
     body가 기준

fixed
1. **스크린**을 기준으로 지정된 위치에 고정
2. 스크롤 시도에도 처음 고정된 위치에서 보여지는 속성값
3. margin auto사용불가
4. 레이어 사용가능


sticky는 브라우저 호환성문제로

가능하면 안쓰고 쓸거면 스크립트를 짜서 쓰는게 낫다하심


----------------------------------------

flex ( flexible box, flexbox) 속성
1. 아이틈들을 가로 방향으로 배치
2. 내용물만큼 width 적용 (=inline-block형태)
3. 아이템들의 height가 모두 컨테이너의 높이만큼 자동 적용
(float은 각각의 콘텐트 만큼 높이 설정)



-----------------
요소레벨이 자동으로 바뀌는 속성들 
float은display flex, grid
position : absolute  / fixed
--------------------
↑↑↑↑↑↑ inline-block형태임



flex container(플렉스 컨테이너)
 flex의 영향을 받는 전체공간

 flex item(플렉스 아이템)
 1. 설정된 속성에 따라 각각의 아이템들이 어떤 형태로 배치되는 것



 div class ="container">
  <div class =" item"> helloflex</div
  <div class =" item"> abc</div
  <div class =" item"> helloflex</div
  </div

  ** flex 컨테이너 속성

  *flex direction 배치방향설정
  row 왼쪽부터 순차적 배치되는
  row - reverse : 오른쪽부터 순차적 배치되는
  column 위에서 아래로 순차적 배치되는
  column reverse 아래에서 위로 순차적 배치되는

  