속성배열에 대하여 공부
/DOM 코어 /  html-dom : html 요소들으 ㅣ속성 제어
dom 코어  : 스크립트가 지원되는 모든 기기에 사용

ex) object.getAttribute('src')  : html에 없는 속성도 제어가 됨


html -dom : 웹 브라우저에서만 사용가능

ex)object.src
형식으로 가져올수 있음

big_img.setAttribute('src','imame/qlkjg.jpg')
위 속성은 기존에 속성이 없다면 새로 추가되고 
속성이 있으면 해당 내용이변경됨
태그에서 본인을 가르키는걸 this로 표현이 가능함
img src='' class = 'big_img'  onclick= 태그 속에 스크립트 버튼 넣었을경우  여기에 this.src하면 본인의 src를 의미함 

***배열

1. 여려개의 값을 가지는 자료구조
2. 자료형의 제약 없음
3. trailing (길게 늘어지는) 쉼표
 - 객체와 마찬가지고 배열의 마지막 요소에 **쉼표 작성 가능** (생략해도 상관은 없음_뒤에 데이터가 더 들어올수도 있어서 일부러 .. 쉼표 달아두는 경우가 있다고 함)
 - 모든 행의 구조가 같아져 요소 추가, 삭제 용이

 var a = 1

 var a  = [
        1, 'bbbbb', {} , true , function(){}
 ]

    배열 선언
    1.let arr = new Array(); // 생성자  괄호에 숫자쓰면 그 숫자크기만큼 값이 들어감
    2. let arr = new Array('사과, '배','기타');
    3. let arr = [];
    4. let fruits = ['사과','오렌지','자두'];
    5. let arr = ['사과',1,{name:'홍'},true,function(){alert('ag')},[]]
        arr[0], arr[2].name;// 홍
        arr[4]() // alert출력됨

    6. 다차원 배열
    let matrix = [
        [1,2,3],
        [4,5,6],
        [7,8,9],
    ];
    matrix[0][1] // 4

 //
 객체 (object)와 배열
 1. 객체: 키를 사용해 식별할 수 있는 값을 담은 컬렉션
 2. 배열 : 순서가 있는 컬렉션을 저장할 때 쓰는 자료 구조



백엔드쪽  tmi

DBMS  -> 데이터베이스 관리하는 시스템
db     -> 
table     한글파일로 예를들면 폴더안에  한글파일이 10개있는 폴더가 있으면  폴더는 db고     한글파일들은 table임
column
row
            record  내가 선택한 데이터 셀이 .
            recordset   


*. 배열 요소 추가
1. 다음 요소에 배열 추가
fruits[3] = '레몬'  // 배열에 ['사과','오렌지','배','레몬']으로 변경됨
fruits[fruis.length] = '레몬'   위와 아래는 동일함

2. 임의 위치에 배열 추가
fruits[6] = '수박'; // ['사과','오렌지','배','레몬',,,'수박'] 중간에 값이 없으면
빈 배열 추가.
console로 보면 empty로 나옴


배열 메소드
1.push(); 맨 끝에 요소 추가 (fast)
2. pop(); 맨끝에 요소 추출(fast)
3. shift(); 제일 앞 요소를 꺼내 제거한 후 남아있는 요소들을 앞으로 이동 (slow)
 - 두번째 요소가 첫번째 요소로 변경
 4. unshift(); 맨앞에 요소 추가 (slow)
 5. splice(순서(몇번째부터), 몇개자를건지(중간에 내용 추가만 할거면 값은 0줘야함), 잘라낸 자리에 추가할 데이터 입력도 가능) : 
fruits = ['사과','오렌지','배','레몬']
fruits.splice(1,0,'dd','nn')
fruits = ['사과','dd','nn','오렌지','배','레몬']
fruits.splice(1,1)
fruits = ['사과','nn','오렌지','배','레몬']
fruits.splice(1)
fruits = ['사과']
이런식으로 활용이 가능함



데이터 다루는 방식 두가지인데
 queue - fifo : first in first out 선입선출
 데이터 입력시  삭제는 제일처음 입력한 순으로  삭제하는방식

 stack - lifo  :last in first out  후입선출
    그릇에 담는느낌임    그릇에 순서대로 넣으면 나중에 넣은게 빼기 슆다.
 두가지에 따라  메소드 사용법이 달라짐





데이터베이스 유형이 .
char하고         고정길이
varchar가 있음   글자수 가변형길이
