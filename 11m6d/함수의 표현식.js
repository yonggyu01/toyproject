// 함수에서도 선언문과 표현식이 갈림
/* 함수 선언문 : function name(){

}

함수 표현식 : const name = function () {

}
*/

let add = function (a,b){
    console.log(a+b)
    return a + b;
}
add(1,2)
// 위에 함수는 무명함수이긴 한데  함수에 이름을 지어줘도 상관은 없으나
//  add에 표현식으로 사용되는 경우 외부에서는 접근이 불가능함 
//   add = function 개똥이(a,b){}  이런식으로 지었다고 가정하고 
// 개똥이(1,2)이렇게 실행해도 실행이 안됨. 어차피 표현식으로 설정된 함수는 이름이 의미가 없음
//  외부에서 함수 이름으로는 접근이 불가능하기 때문에 
// 표현식으로 작성된 함수의 경우 함수 이름을 짓지 않는것임

// 이렇게 표현식으로 작성된 함수의 경우에는 펑션을 생략해서 화살표로 작성도 가능함
let sum = function (a,b){
    return a+b;
}
// 위와 같은 함수에서 펑션을 생략한다면

sum = (a,b) => {
    return a+b;
} 
// 이런식으로도 가능하지만 파라매터를 받아서 그대로 리턴만 하는 함수의 경우 중괄호와 리턴명령어도 생략이 가능하다
sum = (a,b) => a+b;
// 이런식으로 작성도 됨
console.log(sum(5,2));

// 생성자 함수도 있는데 객체에서 배우자
// 즉시 실행함수
(function aegt(){
    console.log('😍');
})();
